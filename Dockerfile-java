# Get 'yq' from the source
FROM mikefarah/yq:4.6.1 as yq

#Import the base docker image built on top of Alpine
FROM alpine:3.13.5

ADD ./alpine-mirrors /etc/apk/repositories

COPY --from=yq /usr/bin/yq /usr/bin/yq

WORKDIR /opt/bin

#Add Packages
RUN apk add --no-cache bash sed grep curl coreutils nodejs npm ca-certificates make openssh-client git socat skopeo openssl jq && \
    curl -fSL "https://github.com/genuinetools/img/releases/download/v0.5.11/img-linux-amd64" -o "/opt/bin/img" && chmod a+x "/opt/bin/img" && \
    apk --no-cache add curl-dev wget openjdk8 maven gradle && apk --no-cache add openjdk11 --repository=http://dl-cdn.alpinelinux.org/alpine/edge/community

#Install OpenJDK 17
RUN wget -O openjdk17.tgz https://download.java.net/java/GA/jdk17.0.2/dfd4a8d0985749f896bed50d7138ee7f/8/GPL/openjdk-17.0.2_linux-x64_bin.tar.gz && \
    mkdir -p /usr/lib/jvm/java-17-openjdk && tar --extract --file openjdk17.tgz --directory /usr/lib/jvm/java-17-openjdk --strip-components 1 && rm openjdk17.tgz*

WORKDIR /cli
ADD ./package.json ./package-lock.json ./.npmrc ./
ADD ./scripts ./scripts
ADD ./commands ./commands
RUN npm install --production

ENTRYPOINT [ "npm", "start" ]
